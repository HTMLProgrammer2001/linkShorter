{"version":3,"sources":["utils/validateErrorsParser.ts","hooks/useHttp.hook.ts","context/auth.context.ts","pages/LinksPage/LinkItem.tsx","components/Loader.tsx","components/Error.tsx","pages/LinksPage/index.tsx","pages/CreatePage.tsx","pages/DetailPage/DetailInfo.tsx","pages/DetailPage/index.tsx","pages/AuthPage.tsx","pages/ConfirmPage.tsx","hooks/useRoutes.hook.tsx","hooks/useAuth.hook.ts","components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["parse","errors","parsedErrors","forEach","err","param","msg","useHttp","useState","isLoading","setLoading","error","setError","errorsFields","setErrorFields","request","useCallback","a","url","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","console","dir","clearError","AuthContext","createContext","token","userID","login","logout","isAuthenticated","LinkItem","props","isDeleting","setDeleting","useContext","deleteLink","id","Authorization","toast","success","onDelete","key","_id","no","href","from","target","rel","to","visitions","length","onClick","Loader","Row","className","Spinner","animation","text","Alert","type","LinksPage","links","setLinks","useEffect","then","catch","e","finally","Table","hover","bordered","map","link","index","newLinks","filter","removeLink","CreatePage","setUrl","history","useHistory","sendHandler","push","Col","xs","span","offset","Form","FormLabel","htmlFor","column","FormControl","name","value","onChange","Feedback","Button","variant","disabled","DetailInfo","code","Date","date","toLocaleString","DetailPage","setLink","isDeleteLoading","setDeletaLoading","params","useParams","Card","Header","Body","Footer","AuthPage","React","email","password","form","changeForm","onChangeHandler","field","signInHandler","loginHandler","md","FormGroup","placeholder","ConfirmPage","useRoutes","path","exact","component","render","log","useAuth","setToken","setUserID","jwtToken","localStorage","setItem","removeItem","getItem","Navbar","noGutters","NavbarBrand","Nav","NavItem","App","routes","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2d967c32.chunk.js","sourcesContent":["type IValidateError = {\r\n\tmsg: string,\r\n\tparam: string\r\n};\r\n\r\nexport type IParsedValidateErrors = {\r\n\t[key: string]: string\r\n};\r\n\r\nconst parse = (errors: IValidateError[]) => {\r\n\tconst parsedErrors: IParsedValidateErrors = {};\r\n\r\n\terrors.forEach((err) => {\r\n\t\tparsedErrors[err.param] = err.msg;\r\n\t});\r\n\r\n\treturn parsedErrors;\r\n};\r\n\r\nexport default parse;\r\n","import {useState, useCallback} from 'react';\r\nimport parse, {IParsedValidateErrors} from '../utils/validateErrorsParser';\r\n\r\n\r\ntype RequestParams = {\r\n\turl: string,\r\n\tmethod?: string,\r\n\tbody?: any,\r\n\theaders?: Record<string, string>\r\n}\r\n\r\nconst useHttp = () => {\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState<string>('');\r\n\tconst [errorsFields, setErrorFields] = useState<IParsedValidateErrors>({});\r\n\r\n\tconst request = useCallback(\r\n\t\tasync <T>({url, method = 'GET', body = null, headers = {}}: RequestParams): Promise<T> => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tif(body)\r\n\t\t\t\tbody = JSON.stringify(body);\r\n\r\n\t\t\theaders['Content-Type'] = 'application/json';\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\t\t\tconst data = await response.json();\r\n\r\n\t\t\t\tif(!response.ok) {\r\n\t\t\t\t\tif(data.errors)\r\n\t\t\t\t\t\tsetErrorFields(parse(data.errors));\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsetErrorFields({});\r\n\r\n\t\t\t\t\tthrow new Error(data.message || 'Something go wrong');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tconsole.dir(e);\r\n\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t\tfinally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}, [setLoading, setError, setErrorFields]);\r\n\r\n\tconst clearError = () => setError('');\r\n\r\n\treturn {isLoading, request, error, clearError, errorsFields};\r\n};\r\n\r\nexport default useHttp;\r\n","import {createContext} from 'react';\r\n\r\n\r\ntype IAuthContextData = {\r\n\ttoken: string,\r\n\tuserID: number,\r\n\tlogin: Function,\r\n\tlogout: Function,\r\n\tisAuthenticated: boolean\r\n};\r\n\r\nconst AuthContext = createContext<IAuthContextData>({\r\n\ttoken: null,\r\n\tuserID: null,\r\n\tlogin: () => {},\r\n\tlogout: () => {},\r\n\tisAuthenticated: false\r\n});\r\n\r\nexport default AuthContext;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {ILink} from '../../interfaces/ILink';\r\nimport {IDeleteLinkResponse} from '../../interfaces/Responses/IDeleteLinkResponse';\r\nimport useHttp from '../../hooks/useHttp.hook';\r\nimport AuthContext from '../../context/auth.context';\r\n\r\n\r\ntype ILinkItemProps = ILink & {\r\n\tno: number,\r\n\tonDelete?: () => void\r\n};\r\n\r\nconst LinkItem: React.FC<ILinkItemProps> = (props) => {\r\n\tconst [isDeleting, setDeleting] = useState<boolean>(false);\r\n\r\n\tconst {request} = useHttp();\r\n\tconst {token} = useContext(AuthContext);\r\n\r\n\tconst deleteLink = async (id: string) => {\r\n\t\tif(isDeleting)\r\n\t\t\treturn;\r\n\r\n\t\tsetDeleting(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await request<IDeleteLinkResponse>({\r\n\t\t\t\turl: `/api/link/${id}`,\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {Authorization: `Bearer ${token}`}\r\n\t\t\t});\r\n\r\n\t\t\ttoast.success(data.message);\r\n\r\n\t\t\tif(props.onDelete)\r\n\t\t\t\tprops.onDelete();\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\ttoast.error(e.message);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tsetDeleting(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<tr key={props._id}>\r\n\t\t\t<td>{props.no + 1}</td>\r\n\r\n\t\t\t<td>\r\n\t\t\t\t<a href={props.from} target=\"_blank\" rel=\"noreferrer noopener\">\r\n\t\t\t\t\t{props.from}\r\n\t\t\t\t</a>\r\n\t\t\t</td>\r\n\r\n\t\t\t<td>\r\n\t\t\t\t<a href={props.to} target=\"_blank\" rel=\"noreferrer noopener\">\r\n\t\t\t\t\t{props.to}\r\n\t\t\t\t</a>\r\n\t\t\t</td>\r\n\r\n\t\t\t<td>{props.visitions.length}</td>\r\n\r\n\t\t\t<td>\r\n\t\t\t\t<span onClick={() => deleteLink(props._id)}>&times;</span>\r\n\r\n\t\t\t\t<Link to={`/detail/${props._id}`}>\r\n\t\t\t\t\tView\r\n\t\t\t\t</Link>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default LinkItem;\r\n","import React from 'react';\r\nimport {Row, Spinner} from 'react-bootstrap';\r\n\r\n\r\nconst Loader: React.FC<{}> = () => (\r\n\t<Row className=\"justify-content-center my-2\">\r\n\t\t<Spinner animation=\"border\"/>\r\n\t</Row>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\n\r\nconst Error: React.FC<{text: string}> = ({text}) => (\r\n\t<Alert type=\"danger\">{text}</Alert>\r\n);\r\n\r\nexport default Error;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {ILink} from '../../interfaces/ILink';\r\nimport {IGetUserLinksResponse} from '../../interfaces/Responses/IGetUserLinksResponse';\r\n\r\nimport useHttp from '../../hooks/useHttp.hook';\r\nimport AuthContext from '../../context/auth.context';\r\nimport LinkItem from './LinkItem';\r\nimport Loader from '../../components/Loader';\r\nimport Error from '../../components/Error';\r\n\r\n\r\nconst LinksPage: React.FC<{}> = () => {\r\n\tconst [links, setLinks] = useState<ILink[]>([]);\r\n\tconst [isLoading, setLoading] = useState<boolean>(true);\r\n\tconst [error, setError] = useState<string>(null);\r\n\r\n\tconst {request} = useHttp();\r\n\tconst {token} = useContext(AuthContext);\r\n\r\n\tuseEffect(() => {\r\n\t\t//set loading flag\r\n\t\tsetLoading(true);\r\n\r\n\t\t//send request\r\n\t\trequest<IGetUserLinksResponse>({\r\n\t\t\turl: '/api/link',\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {Authorization: `Bearer ${token}`}\r\n\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetLinks(data.links);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t})\r\n\t\t\t.finally(() => setLoading(false));\r\n\t}, []);\r\n\r\n\t//function that remove link from list\r\n\tconst removeLink = (id: string) => {\r\n\t\tlet newLinks: ILink[] = links.filter((link) => link._id != id);\r\n\t\tsetLinks(newLinks);\r\n\t};\r\n\r\n\tif(isLoading)\r\n\t\treturn <Loader/>;\r\n\r\n\tif(error)\r\n\t\treturn <Error text={error}/>;\r\n\r\n\tif(!links.length)\r\n\t\treturn <div className=\"text-center\">You haven't links yet</div>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Links page</h3>\r\n\r\n\t\t\t<Table hover bordered>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t<th>From</th>\r\n\t\t\t\t\t\t<th>To</th>\r\n\t\t\t\t\t\t<th>Clicks</th>\r\n\t\t\t\t\t\t<th>Actions</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlinks.map((link, index) => (\r\n\t\t\t\t\t\t\t\t<LinkItem\r\n\t\t\t\t\t\t\t\t\t{...link}\r\n\t\t\t\t\t\t\t\t\tkey={link._id}\r\n\t\t\t\t\t\t\t\t\tno={index}\r\n\t\t\t\t\t\t\t\t\tonDelete={() => removeLink(link._id)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LinksPage;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Row, Col, Form, FormLabel, FormControl, Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport useHttp from '../hooks/useHttp.hook';\r\nimport {IGenerateResponse} from '../interfaces/Responses/IGenerateResponse';\r\nimport AuthContext from '../context/auth.context';\r\n\r\n\r\nconst CreatePage: React.FC<{}> = () => {\r\n\tconst [url, setUrl] = useState<string>('');\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst {request, errorsFields} = useHttp();\r\n\tconst {token} = useContext(AuthContext);\r\n\r\n\tconst formChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUrl(e.target.value);\r\n\t};\r\n\r\n\tconst sendHandler = async () => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst data: IGenerateResponse = await request<IGenerateResponse>({\r\n\t\t\t\turl: '/api/link/generate',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: {url},\r\n\t\t\t\theaders: {Authorization: `Bearer ${token}`}\r\n\t\t\t});\r\n\r\n\t\t\thistory.push(`/detail/${data.link._id}`);\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\ttoast.error(e.message);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t<Col xs={{span: 6, offset: 3}}>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<FormLabel htmlFor=\"urlField\" column={true}>Enter url to short</FormLabel>\r\n\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"url\"\r\n\t\t\t\t\t\tid=\"urlField\"\r\n\t\t\t\t\t\tvalue={url}\r\n\t\t\t\t\t\tonChange={formChangeHandler}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<FormControl.Feedback type=\"invalid\" className=\"d-block\">\r\n\t\t\t\t\t\t{errorsFields['url']}\r\n\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t</Form>\r\n\r\n\t\t\t\t<div className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tclassName=\"m-2\"\r\n\t\t\t\t\t\tonClick={sendHandler}\r\n\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t>Short it!</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default CreatePage;\r\n","import React from 'react';\r\nimport {ILink} from '../../interfaces/ILink';\r\n\r\n\r\nconst DetailInfo: React.FC<{link: ILink}> = ({link}) => (\r\n\t<div>\r\n\t\t<div>ID: {link._id}</div>\r\n\t\t<div>Code: {link.code}</div>\r\n\t\t<div>Date of registration: {new Date(link.date).toLocaleString()}</div>\r\n\t\t<div>Clicks count: {link.visitions.length}</div>\r\n\r\n\t\t<div>\r\n\t\t\t<span>From: </span>\r\n\t\t\t<a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a>\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\t<span>To: </span>\r\n\t\t\t<a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a>\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default DetailInfo;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport {Card, Row} from 'react-bootstrap';\r\n\r\nimport {ILink} from '../../interfaces/ILink';\r\nimport {IDeleteLinkResponse} from '../../interfaces/Responses/IDeleteLinkResponse';\r\nimport {IGetLinkResponse} from '../../interfaces/Responses/IGetLinkResponse';\r\n\r\nimport useHttp from '../../hooks/useHttp.hook';\r\nimport AuthContext from '../../context/auth.context';\r\nimport {Button} from 'react-bootstrap';\r\nimport Loader from '../../components/Loader';\r\nimport Error from '../../components/Error';\r\nimport DetailInfo from './DetailInfo';\r\n\r\n\r\nconst DetailPage: React.FC<{}> = () => {\r\n\tconst [link, setLink] = useState<ILink>(null);\r\n\tconst [error, setError] = useState<string>(null);\r\n\tconst [isLoading, setLoading] = useState<boolean>(true);\r\n\tconst [isDeleteLoading, setDeletaLoading] = useState<boolean>(false);\r\n\r\n\tconst history = useHistory();\r\n\tconst {request} = useHttp();\r\n\tconst {token} = useContext(AuthContext);\r\n\r\n\t//get url params\r\n\tconst params = useParams<{id: string}>();\r\n\r\n\tuseEffect(() => {\r\n\t\t//set loading flag\r\n\t\tsetLoading(true);\r\n\r\n\t\t//send request\r\n\t\trequest<IGetLinkResponse>({\r\n\t\t\turl: `/api/link/${params.id}`,\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {Authorization: `Bearer ${token}`}\r\n\t\t}).then((data: IGetLinkResponse) => {\r\n\t\t\tsetLink(data.link);\r\n\t\t}).catch(e => {\r\n\t\t\tsetError(e.message);\r\n\t\t}).finally(() => setLoading(false));\r\n\t}, []);\r\n\r\n\tconst deleteLink = async (id: string) => {\r\n\t\tsetDeletaLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await request<IDeleteLinkResponse>({\r\n\t\t\t\turl: `/api/link/${id}`,\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {Authorization: `Bearer ${token}`}\r\n\t\t\t});\r\n\r\n\t\t\ttoast.success(data.message);\r\n\r\n\t\t\thistory.push('/create');\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\ttoast.error(e.message);\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tsetDeletaLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tif(isLoading)\r\n\t\treturn <Loader/>;\r\n\r\n\tif(error)\r\n\t\treturn <Error text={error}/>;\r\n\r\n\treturn (\r\n\t\t<Row className=\"justify-content-center my-3\">\r\n\t\t\t<Card className=\"w-100\">\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<b>Details</b>\r\n\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<DetailInfo link={link}/>\r\n\t\t\t\t</Card.Body>\r\n\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row className=\"justify-content-end\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"my-2\"\r\n\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\tdisabled={isDeleteLoading}\r\n\t\t\t\t\t\t\tonClick={() => deleteLink(link._id)}\r\n\t\t\t\t\t\t>Delete link</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport {Col, Form, Row, FormControl, FormGroup, Button, FormLabel, Card} from 'react-bootstrap';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport useHttp from '../hooks/useHttp.hook';\r\nimport AuthContext from '../context/auth.context';\r\nimport {ILoginResponse} from '../interfaces/Responses/ILoginResponse';\r\n\r\n\r\nconst AuthPage: React.FC<{}> = () => {\r\n\tconst [form, changeForm] = React.useState({email: '', password: ''});\r\n\tconst {login} = React.useContext(AuthContext);\r\n\r\n\tconst onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst field = e.target.name as 'email' | 'password';\r\n\r\n\t\tchangeForm({...form, [field]: e.target.value});\r\n\t};\r\n\r\n\tconst {request, isLoading, errorsFields} = useHttp();\r\n\r\n\tconst signInHandler = async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await request<{message: string}>({\r\n\t\t\t\turl: '/api/auth/register',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: form\r\n\t\t\t});\r\n\r\n\t\t\ttoast.success(data.message);\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\ttoast.error(e.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loginHandler = async () => {\r\n\t\ttry{\r\n\t\t\tconst data = await request<ILoginResponse>({\r\n\t\t\t\turl: '/api/auth/login',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: form\r\n\t\t\t});\r\n\r\n\t\t\tlogin(data.token, data.userID);\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\ttoast.error(e.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Row className=\"my-3\">\r\n\t\t\t<Col md={{span: 6, offset: 3}}>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t<b>Authorization</b>\r\n\t\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"email\" column={true}>Email</FormLabel>\r\n\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\tvalue={form.email}\r\n\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\" className=\"d-block\">\r\n\t\t\t\t\t\t\t\t\t{errorsFields['email']}\r\n\t\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"password\" column={true}>Password</FormLabel>\r\n\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\tvalue={form.password}\r\n\t\t\t\t\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<FormControl.Feedback type=\"invalid\" className=\"d-block\">\r\n\t\t\t\t\t\t\t\t\t{errorsFields['password']}\r\n\t\t\t\t\t\t\t\t</FormControl.Feedback>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Card.Body>\r\n\r\n\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t<Row className=\"justify-content-end\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tonClick={loginHandler}\r\n\t\t\t\t\t\t\t\t>Log in</Button>\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"m-2\"\r\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\t\t\tonClick={signInHandler}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Form>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default AuthPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {Alert} from 'react-bootstrap';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport useHttp from '../hooks/useHttp.hook';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst ConfirmPage: React.FC<{}> = () => {\r\n\tconst [isLoading, setLoading] = useState<boolean>(true);\r\n\tconst {request} = useHttp();\r\n\tconst params = useParams<{code: string}>();\r\n\r\n\tuseEffect(() => {\r\n\t\trequest<{message: string}>({\r\n\t\t\turl: `/api/auth/confirm/${params.code}`,\r\n\t\t\tmethod: 'GET'\r\n\t\t}).then(data => {\r\n\t\t\ttoast.success(data.message);\r\n\t\t}).catch((e) => {\r\n\t\t\ttoast.error(e.message);\r\n\t\t}).finally(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif(isLoading)\r\n\t\treturn <Loader/>;\r\n\r\n\treturn <Redirect to=\"/\"/>\r\n};\r\n\r\nexport default ConfirmPage;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport LinksPage from '../pages/LinksPage/';\r\nimport CreatePage from '../pages/CreatePage';\r\nimport DetailPage from '../pages/DetailPage/';\r\nimport AuthPage from '../pages/AuthPage';\r\nimport ConfirmPage from '../pages/ConfirmPage';\r\n\r\n\r\nconst useRoutes = (isAuthenticated: boolean) => {\r\n\tif(isAuthenticated)\r\n\t\treturn (\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/links\" exact component={LinksPage}/>\r\n\t\t\t\t<Route path=\"/create\" exact component={CreatePage}/>\r\n\t\t\t\t<Route path=\"/detail/:id\" exact component={DetailPage}/>\r\n\r\n\t\t\t\t<Route path=\"/\" render={() => {console.log('Redirect'); return <Redirect to=\"/create\"/>}}/>\r\n\t\t\t</Switch>\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/\" exact component={AuthPage}/>\r\n\t\t\t<Route path=\"/confirm/:code\" exact component={ConfirmPage}/>\r\n\r\n\t\t\t<Redirect to=\"/\"/>\r\n\t\t</Switch>\r\n\t);\r\n};\r\n\r\nexport default useRoutes;\r\n\r\n","import {useState, useCallback, useEffect} from 'react';\r\n\r\n\r\ntype UserStorage = {\r\n\ttoken: string,\r\n\tuserID: number\r\n};\r\n\r\nconst useAuth = () => {\r\n\tconst [token, setToken] = useState<string>(null);\r\n\tconst [userID, setUserID] = useState<number>(null);\r\n\r\n\tconst login = useCallback((jwtToken: string, userID: number) => {\r\n\t\tsetToken(jwtToken);\r\n\t\tsetUserID(userID);\r\n\r\n\t\tlocalStorage.setItem('userData', JSON.stringify({\r\n\t\t\ttoken: jwtToken,\r\n\t\t\tuserID\r\n\t\t}));\r\n\t}, []);\r\n\r\n\tconst logout = useCallback(() => {\r\n\t\tsetToken(null);\r\n\t\tsetUserID(null);\r\n\r\n\t\tlocalStorage.removeItem('userData');\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data: UserStorage = JSON.parse(localStorage.getItem('userData'));\r\n\r\n\t\tif(data && data.token)\r\n\t\t\tlogin(data.token, data.userID);\r\n\t}, [login]);\r\n\r\n\treturn {login, logout, userID, token};\r\n};\r\n\r\nexport default useAuth;\r\n","import React, {useContext} from 'react';\r\n\r\nimport AuthContext from '../context/auth.context';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Nav, NavItem, Row, NavbarBrand} from 'react-bootstrap';\r\n\r\n\r\nconst Navbar: React.FC<{}> = () => {\r\n\tconst {logout} = useContext(AuthContext);\r\n\r\n\treturn (\r\n\t\t<Row className=\"justify-content-between bg-primary p-2 text-white align-items-center\" noGutters>\r\n\t\t\t<NavbarBrand>Short your link</NavbarBrand>\r\n\r\n\t\t\t<Nav>\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<NavLink to=\"/create\" className=\"text-white p-1\">Create</NavLink>\r\n\t\t\t\t</NavItem>\r\n\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<NavLink to=\"/links\" className=\"text-white p-1\">Links</NavLink>\r\n\t\t\t\t</NavItem>\r\n\r\n\t\t\t\t<NavItem>\r\n\t\t\t\t\t<a href=\"#\" onClick={() => logout()} className=\"text-white\">Logout</a>\r\n\t\t\t\t</NavItem>\r\n\t\t\t</Nav>\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Container from 'react-bootstrap/cjs/Container';\nimport {ToastContainer} from 'react-toastify';\n\nimport './App.scss';\nimport useRoutes from './hooks/useRoutes.hook';\nimport useAuth from './hooks/useAuth.hook';\nimport AuthContext from './context/auth.context';\nimport Navbar from './components/Navbar';\n\n\nconst App: React.FC<{}> = () => {\n\tconst {login, logout, token, userID} = useAuth();\n\tconst isAuthenticated = !!token;\n\tconst routes: React.ReactElement = useRoutes(isAuthenticated);\n\n\treturn (\n\t\t<AuthContext.Provider value={{login, logout, token, userID, isAuthenticated}}>\n\t\t\t<Router>\n\t\t\t\t{isAuthenticated && <Navbar/>}\n\n\t\t\t\t<Container>\n\t\t\t\t\t{routes}\n\t\t\t\t</Container>\n\t\t\t</Router>\n\n\t\t\t<ToastContainer/>\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}